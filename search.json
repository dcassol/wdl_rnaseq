[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"","code":""},{"path":"index.html","id":"about","chapter":"Welcome","heading":"About","text":"repository containers RNA-seq pipeline, docker container sample data testing.\nPipelines written WDL language Cromwell workflow execution engine used run .","code":""},{"path":"index.html","id":"is-this-workflow-useful-for-you","chapter":"Welcome","heading":"Is this workflow useful for you?","text":"Expected outputFastqc Quality ReportReads Trimming TrimmomaticAlign Reads Reference Genome using HISAT2 (BAM files)Expression quantification using summarizeOverlaps (GenomicFeatures) (Lawrence et al. 2013)Differential Expression Matrix using DESeq2Create Feature set Filtered Differential Expression Matrix","code":""},{"path":"index.html","id":"quick-start---no-installation-required","chapter":"Welcome","heading":"Quick Start - No Installation required","text":"Now, can test edit pipeline data. details, please\ncheck Sample Data section. fun!","code":"docker run  -dP dcassol/wdl_rnaseq\ndocker ps \ndocker exec -it <IMAGE NAME> /bin/bash\ncromwell run rnaseq.wdl -i rnaseq.json -o rnaseq.options.json "},{"path":"index.html","id":"quick-start","chapter":"Welcome","heading":"Quick Start","text":"Step 1: Clone git repository directory computer:Note: Ensure correct permissions run pipeline - using Docker.\nsection provided containing details running HPC environment.Step 2: run pipeline use command :Please, make sure use correct PATH cromwell-72.jar file.","code":"https://github.com/dcassol/wdl_rnaseq.gitcromwell run rnaseq.wdl -i rnaseq.json -o rnaseq.options.json \n## OR\njava -jar cromwell-72.jar run rnaseq.wdl -i rnaseq.json -o rnaseq.options.json"},{"path":"directory-structure.html","id":"directory-structure","chapter":"1 Directory Structure","heading":"1 Directory Structure","text":"repository contains necessary directories files run pipeline.\nreproducibility, user wants maintain structure project directory:Directory names indicated green.\nUsers can change structure needed, need adjust code \nworkflows accordingly.wdl_rnaseq/ (e.g. myproject/)\nroot directory running workflow.\nrnaseq.wdl, rnaseq.options.json, rnaseq.json files.\nSample annotation (* samples.txt*) files located .\nImportant subdirectories:\ndata/ \nRaw data (e.g. FASTQ files)\nFASTA file reference (e.g. reference genome)\nAnnotation files\nMetadata\netc.\n\ntasks/\ntasks/*wdl/: individual steps.\n\nparam/\nparam/adapter/: Illumina adapters Trimmomatic.\n\nresults/\nAnalysis results usually written directory, including: alignment, variant peak files (BAM, VCF, BED); tabular result files; image/plot files\n\n\nroot directory running workflow.rnaseq.wdl, rnaseq.options.json, rnaseq.json files.Sample annotation (* samples.txt*) files located .Important subdirectories:\ndata/ \nRaw data (e.g. FASTQ files)\nFASTA file reference (e.g. reference genome)\nAnnotation files\nMetadata\netc.\n\ntasks/\ntasks/*wdl/: individual steps.\n\nparam/\nparam/adapter/: Illumina adapters Trimmomatic.\n\nresults/\nAnalysis results usually written directory, including: alignment, variant peak files (BAM, VCF, BED); tabular result files; image/plot files\n\ndata/ \nRaw data (e.g. FASTQ files)\nFASTA file reference (e.g. reference genome)\nAnnotation files\nMetadata\netc.\nRaw data (e.g. FASTQ files)FASTA file reference (e.g. reference genome)Annotation filesMetadataetc.tasks/\ntasks/*wdl/: individual steps.\ntasks/*wdl/: individual steps.param/\nparam/adapter/: Illumina adapters Trimmomatic.\nparam/adapter/: Illumina adapters Trimmomatic.results/\nAnalysis results usually written directory, including: alignment, variant peak files (BAM, VCF, BED); tabular result files; image/plot files\nAnalysis results usually written directory, including: alignment, variant peak files (BAM, VCF, BED); tabular result files; image/plot files","code":""},{"path":"sample-data.html","id":"sample-data","chapter":"2 Sample Data","heading":"2 Sample Data","text":"demonstration, chosen data set SRP010938\ncontains 18 paired-end (PE) read sets Arabidopsis thaliana\n(Howard et al. 2013).minimize processing time testing, FASTQ\nfile subsetted 90,000-100,000 randomly sampled PE reads \nmap first 100,000 nucleotides chromosome .\nthaliana genome. corresponding reference genome sequence (FASTA) \nGFF annotation files truncated accordingly. way entire\ntest sample data set less 200MB storage space. mini sample FASTQ\nfiles used demonstration well associated reference genome files can loaded via systemPipeRdata package (H Backman Girke 2016).","code":"\nsystemPipeRdata::genWorkenvir(workflow = \"rnaseq\", mydirname = \"rnaseq\")\nsetwd(\"rnaseq\")\ndir(\"data/\")##  [1] \"GO\"                   \"SRR446027_1.fastq.gz\"\n##  [3] \"SRR446027_2.fastq.gz\" \"SRR446028_1.fastq.gz\"\n##  [5] \"SRR446028_2.fastq.gz\" \"SRR446029_1.fastq.gz\"\n##  [7] \"SRR446029_2.fastq.gz\" \"SRR446030_1.fastq.gz\"\n##  [9] \"SRR446030_2.fastq.gz\" \"SRR446031_1.fastq.gz\"\n## [11] \"SRR446031_2.fastq.gz\" \"SRR446032_1.fastq.gz\"\n## [13] \"SRR446032_2.fastq.gz\" \"SRR446033_1.fastq.gz\"\n## [15] \"SRR446033_2.fastq.gz\" \"SRR446034_1.fastq.gz\"\n## [17] \"SRR446034_2.fastq.gz\" \"SRR446035_1.fastq.gz\"\n## [19] \"SRR446035_2.fastq.gz\" \"SRR446036_1.fastq.gz\"\n## [21] \"SRR446036_2.fastq.gz\" \"SRR446037_1.fastq.gz\"\n## [23] \"SRR446037_2.fastq.gz\" \"SRR446038_1.fastq.gz\"\n## [25] \"SRR446038_2.fastq.gz\" \"SRR446039_1.fastq.gz\"\n## [27] \"SRR446039_2.fastq.gz\" \"SRR446040_1.fastq.gz\"\n## [29] \"SRR446040_2.fastq.gz\" \"SRR446041_1.fastq.gz\"\n## [31] \"SRR446041_2.fastq.gz\" \"SRR446042_1.fastq.gz\"\n## [33] \"SRR446042_2.fastq.gz\" \"SRR446043_1.fastq.gz\"\n## [35] \"SRR446043_2.fastq.gz\" \"SRR446044_1.fastq.gz\"\n## [37] \"SRR446044_2.fastq.gz\" \"tair10.dict\"         \n## [39] \"tair10.fasta\"         \"tair10.fasta.1.ht2\"  \n## [41] \"tair10.fasta.2.ht2\"   \"tair10.fasta.3.ht2\"  \n## [43] \"tair10.fasta.4.ht2\"   \"tair10.fasta.5.ht2\"  \n## [45] \"tair10.fasta.6.ht2\"   \"tair10.fasta.7.ht2\"  \n## [47] \"tair10.fasta.8.ht2\"   \"tair10.gff\"          \n## [49] \"tair10.sqlite\""},{"path":"sample-data.html","id":"sample-data-file","chapter":"2 Sample Data","heading":"2.1 Sample Data file","text":"sample file (tabular format) single type input files, FASTQ files \npaired-end (PE) reads, first second column describe path third column represents unique id name sample. fourth column represents\nbiological replicates. subsequent columns additional\ninformation, number extra columns can added needed.","code":"## ./data/SRR446027_1.fastq.gz  ./data/SRR446027_2.fastq.gz M1A M1  Mock.1h.A\n## ./data/SRR446028_1.fastq.gz  ./data/SRR446028_2.fastq.gz M1B M1  Mock.1h.B\n## ./data/SRR446029_1.fastq.gz  ./data/SRR446029_2.fastq.gz A1A A1  Avr.1h.A\n## ./data/SRR446030_1.fastq.gz  ./data/SRR446030_2.fastq.gz A1B A1  Avr.1h.B"},{"path":"sample-data.html","id":"how-to-customize-sample-data-file-for-your-samples","chapter":"2 Sample Data","heading":"2.2 How to customize sample data file for your samples?","text":"Copy FASTQ files data/ .Copy reference genome data/ .Replace files PATH first second columns sample.txt file, \nrespective IDs biological replicates information.","code":""},{"path":"usage.html","id":"usage","chapter":"3 Usage","heading":"3 Usage","text":"workflow can run using Cromwell:workflow can started following command:rnaseq.options.json contains following json:rnaseq.options.json make sure outputs copy \n./results.","code":"java \\\n    -jar cromwell-<version>.jar \\\n    run \\\n    rnaseq.wdl \\\n    -o rnaseq.options.json  \\\n    -i rnaseq.json \\{\n    \"final_workflow_outputs_dir\": \"results\",\n    \"use_relative_output_paths\": true,\n    \"default_runtime_attributes\": {\n        \"docker\": \"dcassol/wdl_rnaseq\"\n    }\n}"},{"path":"usage.html","id":"inputs","chapter":"3 Usage","heading":"3.1 Inputs","text":"Inputs provided JSON file.Please note major step, providing subdirectories \noutput file. Also, sample data file provided :Trimmomatic inputs:Hisat2 inputs:Quantification inputs:","code":"{\n  \"rnaseq.outdir_fastqc\": \"fastqc/\",\n  \"rnaseq.outdir_trimmomatic\": \"trimmomatic/\",\n  \"rnaseq.outdir_hs2b\": \"data_reference/\", \n  \"rnaseq.outdir_hisat2\": \"hisat2/\",\n  \"rnaseq.inputSamplesFile\": \"./samples.txt\",\n}{\n  \"rnaseq.trimmomatic_path\": \"trimmomatic\",\n  \"rnaseq.seqType\": \"PE\",\n  \"rnaseq.TRIM_threads\": 2,\n  \"rnaseq.Phred\": \"-phred64\",\n  \"rnaseq.truseq_pe_adapter\": \"param/adapters/TruSeq3-PE.fa\",\n  \"rnaseq.leading\": 3,\n  \"rnaseq.trailing\": 3,\n  \"rnaseq.window\": 4,\n  \"rnaseq.quality\": 5,\n  \"rnaseq.minLength\": 35,\n}{\n  \"rnaseq.reference\": \"data/tair10.fasta\",\n  \"rnaseq.sortThreads\": 2,\n  \"rnaseq.hisat2threads\": 2,\n}{\n  \"rnaseq.gff\": \"data/tair10.gff\",\n  \"rnaseq.dataSource\": \"TAIR\",\n  \"rnaseq.db_path\": \"tair10.sqlite\",\n  \"rnaseq.script_quant\": \"tasks/scripts/quantification.doc.R\",\n  \"rnaseq.targets\": \"targetsPE.txt\",\n  \"rnaseq.script_deg\": \"tasks/scripts/deg.doc.R\"\n}"},{"path":"usage.html","id":"outputs","chapter":"3 Usage","heading":"3.2 Outputs","text":"workflow produce number directories files:results/data_reference\nHisat2 index files.\nHisat2 index files.results/fastqc\nContains folder per sample QC metrics.\nContains folder per sample QC metrics.results/trimmomatic\nContains four output files sample:\n*_R1_paired.fq.gz - paired forward reads\n*_R1_unpaired.fq.gz - unpaired forward reads\n*_R2_paired.fq.gz - paired reverse reads\n*_R2_unpaired.fq.gz - unpaired reverse reads\n\nContains four output files sample:\n*_R1_paired.fq.gz - paired forward reads\n*_R1_unpaired.fq.gz - unpaired forward reads\n*_R2_paired.fq.gz - paired reverse reads\n*_R2_unpaired.fq.gz - unpaired reverse reads\n*_R1_paired.fq.gz - paired forward reads*_R1_unpaired.fq.gz - unpaired forward reads*_R2_paired.fq.gz - paired reverse reads*_R2_unpaired.fq.gz - unpaired reverse readsresults/hisat2\nContains BAM, index, summary report sample.\nContains BAM, index, summary report sample.results/countDFeByg.xls: contain count reads values samples.results/rpkmDFeByg.xls: contain RPKM values samples.","code":""},{"path":"resources.html","id":"resources","chapter":"4 Resources","heading":"4 Resources","text":"","code":""},{"path":"resources.html","id":"wdl","chapter":"4 Resources","heading":"4.1 WDL","text":"WDL workflow description language define tasks workflows. WDL aims describe tasks abstract commands inputs, defined, allows wire together form complex workflows. Find information .","code":""},{"path":"resources.html","id":"cromwell","chapter":"4 Resources","heading":"4.2 CROMWELL","text":"CROMWELL execution engine supports running WDL scripts three types platforms: local machine, local cluster/compute farm accessed via job scheduler (e.g. Slurm) cloud platform (e.g. Amazon AWS). Find information .","code":""},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"systempiper-rna-seq-workflow-analysis","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5 systemPipeR RNA-seq Workflow Analysis","text":"","code":""},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"quick-start-1","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.1 Quick Start","text":"","code":""},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"create-the-workflow","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.1.1 Create the workflow","text":"","code":"\nsal <- SPRproject()## Creating directory '/home/dcassol/danielac/LBL/wdl_rnaseq/docs/.SPRproject'\n## Creating file '/home/dcassol/danielac/LBL/wdl_rnaseq/docs/.SPRproject/SYSargsList.yml'\nsal <- importWF(sal, \"../SPR/SPrnaseq.Rmd\")## Reading Rmd fileNow importing step 'load_SPR' \n## Now importing step 'trimming' \n## Now importing step 'fastq_report' \n## Now importing step 'hisat2_index' \n## Now importing step 'hisat2_mapping' \n## Now importing step 'align_stats' \n## Now importing step 'create_db' \n## Now importing step 'read_counting' \n## Now importing step 'sample_tree' \n## Now importing step 'run_edger' \n## Now importing step 'custom_annot' \n## Now importing step 'filter_degs' \n## Now importing step 'venn_diagram' \n## Now importing step 'get_go_annot' \n## Now importing step 'go_enrich' \n## Now importing step 'go_plot' \n## Now importing step 'heatmap' \n## Now importing step 'sessionInfo'"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"running-workflow","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.2 Running workflow","text":"","code":"\nsal <- runWF(sal)"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"visualize-workflow","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.2.1 Visualize workflow","text":"","code":"\nplotWF(sal)"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"checking-workflow-status","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.2.2 Checking workflow status","text":"","code":"\n#statusWF(sal)\nsal## Instance of 'SYSargsList': \n##     WF Steps:\n##        1. load_SPR --> Status: Pending\n##        2. trimming --> Status: Pending \n##            Total Files: 72 | Existing: 0 | Missing: 72 \n##          2.1. trimmomatic-pe\n##              cmdlist: 18 | Pending: 18\n##        3. fastq_report --> Status: Pending\n##        4. hisat2_index --> Status: Pending \n##            Total Files: 8 | Existing: 0 | Missing: 8 \n##          4.1. hisat2-index\n##              cmdlist: 1 | Pending: 1\n##        5. hisat2_mapping --> Status: Pending \n##            Total Files: 72 | Existing: 0 | Missing: 72 \n##          5.1. hisat2\n##              cmdlist: 18 | Pending: 18\n##          5.2. samtools-view\n##              cmdlist: 18 | Pending: 18\n##          5.3. samtools-sort\n##              cmdlist: 18 | Pending: 18\n##          5.4. samtools-index\n##              cmdlist: 18 | Pending: 18\n##        6. align_stats --> Status: Pending\n##        7. create_db --> Status: Pending\n##        8. read_counting --> Status: Pending\n##        9. sample_tree --> Status: Pending\n##        10. run_edger --> Status: Pending\n##        11. custom_annot --> Status: Pending\n##        12. filter_degs --> Status: Pending\n##        13. venn_diagram --> Status: Pending\n##        14. get_go_annot --> Status: Pending\n##        15. go_enrich --> Status: Pending\n##        16. go_plot --> Status: Pending\n##        17. heatmap --> Status: Pending\n##        18. sessionInfo --> Status: Pending\n## "},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"accessing-logs-report","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.2.3 Accessing logs report","text":"","code":"\nsal <- renderLogs(sal)"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"systempiper-rna-seq-workflow-analysis-notebook","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3 systemPipeR RNA-seq Workflow Analysis Notebook","text":"","code":""},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"introduction","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.1 Introduction","text":"Users want provide background information design RNA-Seq project.","code":""},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"samples-and-environment-settings","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.1.1 Samples and environment settings","text":"","code":""},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"environment-settings-and-input-data","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.1.1.1 Environment settings and input data","text":"Typically, user wants record sources versions \nreference genome sequence along corresponding annotations. \nprovided sample data set data inputs stored data\nsubdirectory results written separate results directory,\nsystemPipeRNAseq.Rmd script targets file expected \nlocated parent directory. R session expected run parent directory.systemPipeRdata package helper package generate fully populated systemPipeR\nworkflow environment current working directory single command.\ninstruction generating workflow provide systemPipeRdata vignette .mini sample FASTQ files used report well associated reference genome files\ncan loaded via systemPipeRdata package.\nchosen data set SRP010938\ncontains 18 paired-end (PE) read sets Arabidposis thaliana\n(Howard et al. 2013). minimize processing time testing, FASTQ\nfile subsetted 90,000-100,000 randomly sampled PE reads \nmap first 100,000 nucleotides chromosome .\nthaliana genome. corresponding reference genome sequence (FASTA) \nGFF annotation files truncated accordingly. way entire\ntest sample data set less 200MB storage space. PE read set \nchosen test data set flexibility, can used testing types\nanalysis routines requiring either SE (single end) reads PE reads.","code":"\nsystemPipeRdata::genWorkenvir(workflow = \"rnaseq\", mydirname = \"rnaseq\")\nsetwd(\"rnaseq\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"create-the-workflow-1","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2 Create the workflow","text":"","code":"\nsal <- SPRproject()"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"required-packages-and-resources","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.1 Required packages and resources","text":"systemPipeR package needs loaded (H Backman Girke 2016).","code":"\nappendStep(sal) <- LineWise({\n                            library(systemPipeR)\n                            }, step_name = \"load_SPR\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"read-preprocessing","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.2 Read preprocessing","text":"","code":""},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"read-trimming-with-trimmomatic","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.2.1 Read trimming with Trimmomatic","text":"Next, need populate object created first step \nworkflow. , example perform task using parameters template\nfiles trimming FASTQ files Trimmomatic software (Bolger, Lohse, Usadel 2014).","code":"\ntargetspath <- \"targetsPE.txt\"\nappendStep(sal) <- SYSargsList(\n    step_name = \"trimming\",\n    targets=targetspath, \n    wf_file = \"trimmomatic/trimmomatic-pe.cwl\", input_file = \"trimmomatic/trimmomatic-pe.yml\",\n    dir_path= \"param/cwl\",\n    inputvars=c(FileName1=\"_FASTQ_PATH1_\", FileName2=\"_FASTQ_PATH2_\", SampleName=\"_SampleName_\"), \n    dependency = \"load_SPR\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"fastq-quality-report","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.2.2 FASTQ quality report","text":"following seeFastq seeFastqPlot functions generate plot series useful\nquality statistics set FASTQ files including per cycle quality box\nplots, base proportions, base-level quality trends, relative k-mer\ndiversity, length occurrence distribution reads, number reads\nquality cutoffs mean quality distribution. results \nwritten PDF file named fastqReport.pdf.","code":"\nappendStep(sal) <- LineWise({\n                            fastq <- getColumn(sal, step = \"trimming\", \"targetsWF\", column = 1)\n                            fqlist <- seeFastq(fastq=fastq, batchsize=10000, klength=8)\n                            pdf(\"./results/fastqReport.pdf\", height=18, width=4*length(fqlist))\n                            seeFastqPlot(fqlist)\n                            dev.off()\n                            }, step_name = \"fastq_report\", \n                            dependency = \"trimming\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"alignments","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.3 Alignments","text":"","code":""},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"read-mapping-with-hisat2","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.3.1 Read mapping with HISAT2","text":"following steps demonstrate use short read aligner Hisat2\n(Kim, Langmead, Salzberg 2015) interactive job submissions batch submissions \nqueuing systems clusters using systemPipeR's new CWL command-line interface.Build Hisat2 index.","code":"\nappendStep(sal) <- SYSargsList(\n  step_name = \"hisat2_index\", dir = FALSE, targets=NULL, \n  wf_file = \"hisat2/hisat2-index.cwl\", \n  input_file=\"hisat2/hisat2-index.yml\",\n  dir_path=\"param/cwl\", \n  dependency = \"load_SPR\"\n)"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"hisat2-mapping","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.3.2 HISAT2 mapping","text":"parameter settings aligner defined hisat2-mapping-se.cwl\nhisat2-mapping-se.yml files. following shows construct \ncorresponding SYSargsList object.","code":"\nappendStep(sal) <- SYSargsList(\n  step_name = \"hisat2_mapping\",\n  targets =\"trimming\", dir = TRUE, \n  wf_file = \"workflow-hisat2/workflow_hisat2-pe.cwl\",\n  input_file = \"workflow-hisat2/workflow_hisat2-pe.yml\",\n  dir_path = \"param/cwl\",\n  inputvars = c(trimmomatic_1_paired = \"_FASTQ_PATH1_\", trimmomatic_2_paired = \"_FASTQ_PATH2_\", \n                SampleName = \"_SampleName_\"),\n  rm_targets_col = c(\"FileName1\", \"FileName2\"), \n  dependency = c(\"trimming\", \"hisat2_index\")\n)"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"read-and-alignment-stats","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.3.3 Read and alignment stats","text":"following provides overview number reads sample\nmany aligned reference.","code":"\nappendStep(sal) <- LineWise({\n                           bampaths <- getColumn(sal, step = \"hisat2_mapping\", \"outfiles\", column = \"samtools_sort_bam\")\n                           fqpaths <- getColumn(sal, step = \"trimming\", \"targetsWF\", column = \"FileName1\")\n                           read_statsDF <- alignStats(args=bampaths, fqpaths = fqpaths, pairEnd = TRUE)\n                           write.table(read_statsDF, \"results/alignStats.xls\", row.names=FALSE, quote=FALSE, sep=\"\\t\")\n                            }, step_name = \"align_stats\", \n                            dependency = \"hisat2_mapping\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"read-quantification","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.4 Read quantification","text":"Reads overlapping annotation ranges interest counted \nsample using summarizeOverlaps function (Lawrence et al. 2013). read counting \npreformed exon gene regions non-strand-specific manner \nignoring overlaps among different genes. Subsequently, expression\ncount values normalized reads per kp per million mapped reads\n(RPKM). raw read count table (countDFeByg.xls) corresponding\nRPKM table (rpkmDFeByg.xls) written separate files directory project. Parallelization achieved BiocParallel package, using 8 CPU cores.","code":""},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"create-a-database-for-gene-annotation","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.4.1 Create a database for gene annotation","text":"","code":"\nappendStep(sal) <- LineWise({\n                    library(\"GenomicFeatures\"); library(BiocParallel)\n                    (function(){\n                    # if db is there, skip this step\n                    if(file.exists(\"./data/tair10.sqlite\")) return(TRUE)\n                    # otherwise prepare the db\n                    txdb <- makeTxDbFromGFF(file=\"data/tair10.gff\", format=\"gff\", dataSource=\"TAIR\", organism=\"Arabidopsis thaliana\")\n                    saveDb(txdb, file=\"./data/tair10.sqlite\")\n                    })()\n                    }, step_name = \"create_db\", \n                    dependency = \"hisat2_mapping\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"read-counting-with-summarizeoverlaps-in-parallel-mode-using-multiple-cores","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.4.2 Read counting with summarizeOverlaps in parallel mode using multiple cores","text":"Note, statistical differential expression abundance analysis\nmethods, edgeR DESeq2, raw count values used input. \nusage RPKM values restricted specialty applications\nrequired users, e.g. manually comparing expression levels\namong different genes features.","code":"\nappendStep(sal) <- LineWise({\n                    txdb <- loadDb(\"./data/tair10.sqlite\")\n                    outpaths <- getColumn(sal, step = \"hisat2_mapping\", \"outfiles\", column = \"samtools_sort_bam\")\n                    eByg <- exonsBy(txdb, by=c(\"gene\"))\n                    bfl <- BamFileList(outpaths, yieldSize=50000, index=character())\n                    multicoreParam <- MulticoreParam(workers=2); register(multicoreParam); registered()\n                    counteByg <- bplapply(bfl, function(x) summarizeOverlaps(eByg, x, mode=\"Union\", \n                                                                   ignore.strand=TRUE, \n                                                                   inter.feature=FALSE, \n                                                                   singleEnd=TRUE)) \n                    countDFeByg <- sapply(seq(along=counteByg), function(x) assays(counteByg[[x]])$counts)\n                    rownames(countDFeByg) <- names(rowRanges(counteByg[[1]])); colnames(countDFeByg) <- names(bfl)\n                    rpkmDFeByg <- apply(countDFeByg, 2, function(x) returnRPKM(counts=x, ranges=eByg))\n                    write.table(countDFeByg, \"results/countDFeByg.xls\", col.names=NA, quote=FALSE, sep=\"\\t\")\n                    write.table(rpkmDFeByg, \"results/rpkmDFeByg.xls\", col.names=NA, quote=FALSE, sep=\"\\t\")\n                    }, step_name = \"read_counting\", \n                    dependency = \"create_db\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"sample-wise-correlation-analysis","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.4.3 Sample-wise correlation analysis","text":"following computes sample-wise Spearman correlation coefficients \nrlog transformed expression values generated DESeq2 package. \ntransformation distance matrix, hierarchical clustering performed \nhclust function result plotted dendrogram\n(also see file sample_tree.pdf).","code":"\nappendStep(sal) <- LineWise({\n                    library(DESeq2, quietly=TRUE); library(ape,  warn.conflicts=FALSE)\n                    countDF <- as.matrix(read.table(\"./results/countDFeByg.xls\"))\n                    colData <- data.frame(row.names=SampleName(sal, \"hisat2_mapping\"), condition=getColumn(sal, \"hisat2_mapping\", position = \"targetsWF\", column = \"Factor\" ))\n                    dds <- DESeqDataSetFromMatrix(countData = countDF, colData = colData, design = ~ condition)\n                    d <- cor(assay(rlog(dds)), method=\"spearman\")\n                    hc <- hclust(dist(1-d))\n                    pdf(\"results/sample_tree.pdf\")\n                    plot.phylo(as.phylo(hc), type=\"p\", edge.col=\"blue\", edge.width=2, show.node.label=TRUE, no.margin=TRUE)\n                    dev.off()\n                    }, step_name = \"sample_tree\", \n                    dependency = \"read_counting\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"analysis-of-degs","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.5 Analysis of DEGs","text":"analysis differentially expressed genes (DEGs) performed \nglm method edgeR package (Robinson, McCarthy, Smyth 2010). sample\ncomparisons used analysis defined header lines \ntargets.txt file starting <CMP>.","code":""},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"run-edger","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.5.1 Run edgeR","text":"","code":"\nappendStep(sal) <- LineWise({\n                    library(edgeR)\n                    countDF <- read.delim(\"results/countDFeByg.xls\", row.names=1, check.names=FALSE) \n                    cmp <- readComp(stepsWF(sal)[['hisat2_mapping']], format=\"matrix\", delim=\"-\")\n                    edgeDF <- run_edgeR(countDF=countDF, targets=targetsWF(sal)[['hisat2_mapping']], cmp=cmp[[1]], independent=FALSE, mdsplot=\"\")\n                    }, step_name = \"run_edger\", \n                    dependency = \"read_counting\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"add-gene-descriptions","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.5.2 Add gene descriptions","text":"","code":"\nappendStep(sal) <- LineWise({\n                    library(\"biomaRt\")\n                    m <- useMart(\"plants_mart\", dataset=\"athaliana_eg_gene\", host=\"plants.ensembl.org\")\n                    desc <- getBM(attributes=c(\"tair_locus\", \"description\"), mart=m)\n                    desc <- desc[!duplicated(desc[,1]),]\n                    descv <- as.character(desc[,2]); names(descv) <- as.character(desc[,1])\n                    edgeDF <- data.frame(edgeDF, Desc=descv[rownames(edgeDF)], check.names=FALSE)\n                    write.table(edgeDF, \"./results/edgeRglm_allcomp.xls\", quote=FALSE, sep=\"\\t\", col.names = NA)\n                    }, step_name = \"custom_annot\", \n                    dependency = \"run_edger\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"plot-deg-results","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.5.3 Plot DEG results","text":"Filter plot DEG results regulated genes. \ndefinition given corresponding help\nfile. open , type ?filterDEGs R console.","code":"\nappendStep(sal) <- LineWise({\n                    edgeDF <- read.delim(\"results/edgeRglm_allcomp.xls\", row.names=1, check.names=FALSE) \n                    pdf(\"results/DEGcounts.pdf\")\n                    DEG_list <- filterDEGs(degDF=edgeDF, filter=c(Fold=2, FDR=20))\n                    dev.off()\n                    write.table(DEG_list$Summary, \"./results/DEGcounts.xls\", quote=FALSE, sep=\"\\t\", row.names=FALSE)\n                    }, step_name = \"filter_degs\", \n                    dependency = \"custom_annot\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"venn-diagrams-of-deg-sets","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.5.4 Venn diagrams of DEG sets","text":"overLapper function can compute Venn intersects large numbers sample\nsets (20 ) plots 2-5 way Venn diagrams. useful\nfeature possibility combine counts several Venn\ncomparisons number sample sets single Venn diagram\n(4 DEG sets).","code":"\nappendStep(sal) <- LineWise({\n                    vennsetup <- overLapper(DEG_list$Up[6:9], type=\"vennsets\")\n                    vennsetdown <- overLapper(DEG_list$Down[6:9], type=\"vennsets\")\n                    pdf(\"results/vennplot.pdf\")\n                    vennPlot(list(vennsetup, vennsetdown), mymain=\"\", mysub=\"\", colmode=2, ccol=c(\"blue\", \"red\"))\n                    dev.off()\n                    }, step_name = \"venn_diagram\", \n                    dependency = \"filter_degs\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"go-term-enrichment-analysis","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.6 GO term enrichment analysis","text":"","code":""},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"obtain-gene-to-go-mappings","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.6.1 Obtain gene-to-GO mappings","text":"following shows obtain gene--GO mappings biomaRt (.\nthaliana) organize downstream GO term\nenrichment analysis. Alternatively, gene--GO mappings can \nobtained many organisms Bioconductor’s *.db genome annotation\npackages GO annotation files provided various genome databases.\nannotation relatively slow preprocessing step needs \nperformed . Subsequently, preprocessed data can loaded\nload function shown next subsection.","code":"\nappendStep(sal) <- LineWise({\n                    library(\"biomaRt\")\n                    (function(){\n                      if (file.exists(\"data/GO/catdb.RData\")) return(TRUE)\n                      # listMarts() # To choose BioMart database\n                      # listMarts(host=\"plants.ensembl.org\")\n                      m <- useMart(\"plants_mart\", host=\"plants.ensembl.org\")\n                      listDatasets(m)\n                      m <- useMart(\"plants_mart\", dataset=\"athaliana_eg_gene\", host=\"plants.ensembl.org\")\n                      # listAttributes(m) # Choose data types you want to download\n                      go <- getBM(attributes=c(\"go_id\", \"tair_locus\", \"namespace_1003\"), mart=m)\n                      go <- go[go[,3]!=\"\",]; go[,3] <- as.character(go[,3])\n                      go[go[,3]==\"molecular_function\", 3] <- \"F\"; go[go[,3]==\"biological_process\", 3] <- \"P\"; go[go[,3]==\"cellular_component\", 3] <- \"C\"\n                      go[1:4,]\n                      dir.create(\"./data/GO\")\n                      write.table(go, \"data/GO/GOannotationsBiomart_mod.txt\", quote=FALSE, row.names=FALSE, col.names=FALSE, sep=\"\\t\")\n                      catdb <- makeCATdb(myfile=\"data/GO/GOannotationsBiomart_mod.txt\", lib=NULL, org=\"\", colno=c(1,2,3), idconv=NULL)\n                      save(catdb, file=\"data/GO/catdb.RData\")\n                    })()\n                    }, step_name = \"get_go_annot\", \n                    dependency = \"filter_degs\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"batch-go-term-enrichment-analysis","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.6.2 Batch GO term enrichment analysis","text":"Apply enrichment analysis DEG sets obtained differential\nexpression analysis. Note, following example FDR filter set\nunreasonably high value, simply small size toy\ndata set used vignette. Batch enrichment analysis many gene sets \nperformed function. method=, returns GO terms passing\np-value cutoff specified cutoff arguments. method=slim,\nreturns GO terms specified myslimv argument. given\nexample shows GO slim vector specific organism can obtained \nBioMart.","code":"\nappendStep(sal) <- LineWise({\nlibrary(\"biomaRt\")\n                    load(\"data/GO/catdb.RData\")\n                    DEG_list <- filterDEGs(degDF=edgeDF, filter=c(Fold=2, FDR=50), plot=FALSE)\n                    up_down <- DEG_list$UporDown; names(up_down) <- paste(names(up_down), \"_up_down\", sep=\"\")\n                    up <- DEG_list$Up; names(up) <- paste(names(up), \"_up\", sep=\"\")\n                    down <- DEG_list$Down; names(down) <- paste(names(down), \"_down\", sep=\"\")\n                    DEGlist <- c(up_down, up, down)\n                    DEGlist <- DEGlist[sapply(DEGlist, length) > 0]\n                    BatchResult <- GOCluster_Report(catdb=catdb, setlist=DEGlist, method=\"all\", id_type=\"gene\", CLSZ=2, cutoff=0.9, gocats=c(\"MF\", \"BP\", \"CC\"), recordSpecGO=NULL)\n                    library(\"biomaRt\")\n                    m <- useMart(\"plants_mart\", dataset=\"athaliana_eg_gene\", host=\"plants.ensembl.org\")\n                    goslimvec <- as.character(getBM(attributes=c(\"goslim_goa_accession\"), mart=m)[,1])\n                    BatchResultslim <- GOCluster_Report(catdb=catdb, setlist=DEGlist, method=\"slim\", id_type=\"gene\", myslimv=goslimvec, CLSZ=10, cutoff=0.01, gocats=c(\"MF\", \"BP\", \"CC\"), recordSpecGO=NULL)\n                    }, step_name = \"go_enrich\", \n                    dependency = \"get_go_annot\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"plot-batch-go-term-results","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.6.3 Plot batch GO term results","text":"data.frame generated GOCluster can plotted goBarplot function. \nvariable size sample sets, may always desirable show\nresults different DEG sets bar plot. Plotting\nsingle sample sets achieved subsetting input data frame \nshown first line following example.","code":"\nappendStep(sal) <- LineWise({\n                    gos <- BatchResultslim[grep(\"M6-V6_up_down\", BatchResultslim$CLID), ]\n                    gos <- BatchResultslim\n                    pdf(\"results/GOslimbarplotMF.pdf\", height=8, width=10)\n                    goBarplot(gos, gocat=\"MF\")\n                    dev.off()\n                    goBarplot(gos, gocat=\"BP\")\n                    goBarplot(gos, gocat=\"CC\")\n                    }, step_name = \"go_plot\", \n                    dependency = \"go_enrich\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"clustering-and-heat-maps","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.7 Clustering and heat maps","text":"following example performs hierarchical clustering rlog\ntransformed expression matrix subsetted DEGs identified \ndifferential expression analysis. uses Pearson correlation-based distance\nmeasure complete linkage cluster joining.","code":"\nappendStep(sal) <- LineWise({\n                    library(pheatmap)\n                    geneids <- unique(as.character(unlist(DEG_list[[1]])))\n                    y <- assay(rlog(dds))[geneids, ]\n                    pdf(\"results/heatmap1.pdf\")\n                    pheatmap(y, scale=\"row\", clustering_distance_rows=\"correlation\", clustering_distance_cols=\"correlation\")\n                    dev.off()\n                    }, step_name = \"heatmap\", \n                    dependency = \"go_enrich\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"version-information","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.2.8 Version Information","text":"","code":"\nappendStep(sal) <- LineWise({\n                    sessionInfo()\n                    }, step_name = \"sessionInfo\", \n                    dependency = \"heatmap\")"},{"path":"systempiper-rna-seq-workflow-analysis.html","id":"references","chapter":"5 systemPipeR RNA-seq Workflow Analysis","heading":"5.3.3 References","text":"","code":""},{"path":"settings.html","id":"settings","chapter":"6 Settings","heading":"6 Settings","text":"section demonstrate :install cromwell;create docker image used tutorial deploy docker image Docker Hub;create Singularity container docker;build webpage.Extra notes included .","code":""},{"path":"settings.html","id":"install-cromwell-locally","chapter":"6 Settings","heading":"6.1 Install cromwell locally","text":"","code":""},{"path":"settings.html","id":"how-to-install-cromwell-locally-with-conda","chapter":"6 Settings","heading":"6.1.1 How to Install cromwell locally with Conda","text":"","code":""},{"path":"settings.html","id":"how-to-install-conda","chapter":"6 Settings","heading":"6.1.1.1 How to Install Conda","text":"","code":"wget https://repo.anaconda.com/miniconda/Miniconda3-py38_4.10.3-Linux-x86_64.sh\nbash Miniconda3-latest-Linux-x86_64.sh\nconda config --add channels conda-forge\nconda config --set channel_priority strict\nconda install <package-name>\nconda deactivate ## deactivate\nconda activate ## activate\nconda update -n base -c defaults conda ## update\nconda --version ## check version \n## conda 4.11.0"},{"path":"settings.html","id":"install-cromwell-locally-with-conda","chapter":"6 Settings","heading":"6.1.1.2 Install cromwell locally with Conda","text":"","code":"conda install cromwell\ncromwell --version\n## cromwell 72"},{"path":"settings.html","id":"how-to-install-cromwell-from-github","chapter":"6 Settings","heading":"6.1.2 How to Install cromwell from GitHub","text":"simplify, can create file call cromwell export PATH","code":"cd ~\nmkdir cromwell\ncd cromwell/\nwget https://github.com/broadinstitute/cromwell/releases/download/72/cromwell-72.jar\ncd ~\njava -jar ~/cromwell/cromwell-72.jar!/bin/bash\n<cromwell_PATH>/cromwell-72.jar $@cromwell --version"},{"path":"settings.html","id":"docker","chapter":"6 Settings","heading":"6.2 Docker","text":"","code":""},{"path":"settings.html","id":"how-to-create-a-repository","chapter":"6 Settings","heading":"6.2.1 How to create a repository:","text":"Create first repository LinkSign Docker Hub.Click Create Repository Docker Hub welcome page:\nName /-repo.\nAdd Description.\nClick Create.\nName /-repo.Add Description.Click Create.","code":""},{"path":"settings.html","id":"build-and-push-a-container-image-to-docker-hub-from-your-computer","chapter":"6 Settings","heading":"6.2.2 Build and push a container image to Docker Hub from your computer","text":"","code":""},{"path":"settings.html","id":"start-by-creating-a-dockerfile-to-specify-your-application","chapter":"6 Settings","heading":"6.2.2.1 Start by creating a Dockerfile to specify your application","text":"minimal example. Please find details.","code":"mkdir docker_test\ncd docker_test\ntouch Dockerfile## Docker LBL\nFROM bioconductor/bioconductor_docker:devel\n\nRUN apt-get update && \\\n    apt-get install -y hisat2 bowtie bowtie2 bwa samtools vim && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /home/project/RNAseq/\n\nCOPY --chown=rstudio:rstudio . /home/project/RNAseq/\n\n## Update Bioconductor packages from devel version\n#RUN Rscript --vanilla -e \"options(repos = c(CRAN = 'https://cran.r-project.org')); BiocManager::install(ask=FALSE)\"\n\n## Metadata\nLABEL name=\"dcassol/wdl_rnaseq\" \\\n      version=\"wdl_rnaseq:latest\" \\\n      url=\"https://github.com/dcassol/wdl_rnaseq\" \\\n      vendor=\"LBL RNAseq Workflow\" \\\n      maintainer=\"danicassol@gmail.com\" \\\n      description=\"LBL RNAseq Workflow docker image\" \\\n      license=\"Artistic-2.0\""},{"path":"settings.html","id":"run-docker-build-to-build-your-docker-image","chapter":"6 Settings","heading":"6.2.2.2 Run docker build to build your Docker image","text":"","code":"docker build -t dcassol/wdl_rnaseq . "},{"path":"settings.html","id":"run-docker-run-to-test-your-docker-image-locally","chapter":"6 Settings","heading":"6.2.2.3 Run docker run to test your Docker image locally","text":"","code":"docker run -dP dcassol/wdl_rnaseq\ndocker ps \ndocker exec -it <IMAGE NAME> /bin/bash"},{"path":"settings.html","id":"run-docker-push-to-push-your-docker-image-to-docker-hub","chapter":"6 Settings","heading":"6.2.2.4 Run docker push to push your Docker image to Docker Hub","text":"repository Docker Hub now display new latest tag Tags","code":"docker push dcassol/wdl_rnaseq"},{"path":"settings.html","id":"make-changes-to-the-container-and-create-the-new-image","chapter":"6 Settings","heading":"6.2.2.5 Make changes to the container and Create the new image","text":"Create folder, example:Run new image:","code":"docker run -dP dcassol/wdl_rnaseq\ndocker ps ## To check the NAME <lucid_grothendieck>\ndocker exec -it lucid_grothendieck /bin/bash\nroot@33c758eb1626:/# R\nsetwd(\"home/rstudio/\")\nsystemPipeRdata::genWorkenvir(\"rnaseq\")\nexit\ndocker commit -m \"Added rnaseq template\" -a \"Dani Cassol\" lucid_grothendieck dcassol/wdl_rnaseq:rnaseq\ndocker push dcassol/wdl_rnaseq:rnaseqdocker run  -dP dcassol/wdl_rnaseq:rnaseq\ndocker ps \ndocker exec -it <IMAGE NAME> /bin/bash"},{"path":"settings.html","id":"docker-commands","chapter":"6 Settings","heading":"6.2.3 Docker Commands","text":"Docker Login\ndocker loginDocker Login\ndocker loginList docker machines available locally\ndocker imagesList docker machines available locally\ndocker imagesList running containers\ndocker psList running containers\ndocker psList containers\ndocker ps -aList containers\ndocker ps -aResume stopped container\ndocker start <CONTAINER ID>Resume stopped container\ndocker start <CONTAINER ID>Shell running container\ndocker exec -<CONTAINER ID> /bin/bashShell running container\ndocker exec -<CONTAINER ID> /bin/bashStop remove cointainer\ndocker stop <CONTAINER ID>\ndocker rm <CONTAINER ID>Stop remove cointainer\ndocker stop <CONTAINER ID>\ndocker rm <CONTAINER ID>Remove image\ndocker rmi dcassol/systempipeworkshop2021:rnaseqRemove image\ndocker rmi dcassol/systempipeworkshop2021:rnaseq","code":""},{"path":"settings.html","id":"singularity-container","chapter":"6 Settings","heading":"6.3 Singularity Container","text":"Please download Docker image dcassol/wdl_rnaseq, follow:can also use build command download pre-built images Docker.\nUnlike pull, build convert image latest Singularity image format downloading .run container:","code":"singularity pull docker://dcassol/wdl_rnaseq:latestsingularity build wdl_rnaseq_docker_latest.sif docker://dcassol/wdl_rnaseq:latestsingularity shell wdl_rnaseq_docker_latest.sif"},{"path":"settings.html","id":"build-website","chapter":"6 Settings","heading":"6.4 Build Website","text":"website created bookdown package (Xie 2021).\nbuild locally, please use following command:repository uses GitHub Action, file updated created, website deployed using GitHub Pages, pushing.","code":"\nsetwd(\"docs\")\nbookdown::render_book('index.Rmd', 'bookdown::bs4_book')"},{"path":"settings.html","id":"resources-1","chapter":"6 Settings","heading":"6.5 Resources","text":"Docker Run: create images applicationDocker Hub QuickstartConfigure GitHub ActionsSingularity","code":""},{"path":"settings.html","id":"common-problems","chapter":"6 Settings","heading":"6.6 Common Problems","text":"Solution:","code":"## Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.24/auth: dial unix /var/run/docker.sock: connect: permission deniedsudo chmod 666 /var/run/docker.sock"},{"path":"settings.html","id":"extra","chapter":"6 Settings","heading":"6.7 Extra:","text":"https://biowdl-input-converter.readthedocs.io/en/stable/#creating-comma-delimited-files","code":"pip install biowdl-input-converter\nbiowdl-input-converter --validate samples.csv\nbiowdl-input-converter -f csv -o samples.yaml samples.csv "},{"path":"references-1.html","id":"references-1","chapter":"References","heading":"References","text":"","code":""}]
